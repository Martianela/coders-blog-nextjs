import { AxiosResponse } from "axios";
import { GetServerSideProps } from "next";
import React from "react";
import { fetchArticlesUsingSlug } from "../../http";
import { IArticles, ICollectionResponse } from "../../types";
import * as qs from "qs";
import Head from "next/head";
import {
  CapitalizeString,
  formateDate,
  makeCategory,
  serializeMarkdown,
} from "../../utils";
import Image from "next/image";
import { MDXRemote } from "next-mdx-remote";
import { MDXRemoteSerializeResult } from "next-mdx-remote/dist/types";
import Newsletter from "../../components/Newsletter";
interface IPropType {
  article: IArticles;
  notFound: boolean;
  slug: string;
}
const slug = ({ article, notFound = false, slug }: IPropType) => {
  const formattedCategory = () => {
    return CapitalizeString(makeCategory(slug));
  };
  console.log(article);

  return (
    <>
      <Head>
        <title>Coders blog {formattedCategory()} </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="my-12 lg:grid lg:grid-cols-3 gap-12 single_article">
        <div className="col-span-2">
          <h1 className="text-3xl font-bold py-2">
            {article.attributes.title}
          </h1>{" "}
          <div className="flex gap-2 my-4 items-center">
            <div className="rounded-lg overflow-hidden flex flex-col items-center justify-center">
              <Image
                src={`http://localhost:1337${article.attributes.author.data.attributes.avatar.data.attributes.formats.thumbnail.url}`}
                alt="img"
                height={40}
                width={40}
                className="w-[40px] h-[40px] "
              />
            </div>
            <span className="text-sm font-bold text-gray-600">
              {article.attributes.author.data.attributes.firstname}{" "}
              {article.attributes.author.data.attributes.lastname} on
            </span>
            <span className="text-gray-400 text-sm ">
              {formateDate(article.attributes.createdAt)}
            </span>
          </div>
          <div className="text-lg text-gray-600 leading-8 ">
            <img
              className="w-full my-12 mb-6 "
              src={`http://localhost:1337${article.attributes.image.data.attributes.url}`}
              alt="x"
            />{" "}
            <MDXRemote
              {...(article.attributes.body as MDXRemoteSerializeResult)}
            />
          </div>
        </div>
        <div className="w-full">
          <Newsletter />
        </div>
      </div>
    </>
  );
};
export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  const queryString = qs.stringify({
    populate: ["image", "author.avatar"],
    filters: {
      slug: {
        $eq: query.slug,
      },
    },
  });
  const { data: articles }: AxiosResponse<ICollectionResponse<IArticles[]>> =
    await fetchArticlesUsingSlug(queryString);
  if (articles.data.length === 0) {
    return {
      notFound: true,
    };
  }
  return {
    props: {
      article: await serializeMarkdown(articles.data[0]),
      slug: query.slug,
    },
  };
};
export default slug;
